/* cmdline.h */

/* File autogenerated by gengetopt version 2.20  */

#ifndef CMDLINE_H
#define CMDLINE_H

/* If we use autoconf.  */
#ifdef HAVE_CONFIG_H
#include "config.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

#ifndef CMDLINE_PARSER_PACKAGE
#define CMDLINE_PARSER_PACKAGE "VP_auto"
#endif

#ifndef CMDLINE_PARSER_VERSION
#define CMDLINE_PARSER_VERSION "3.0"
#endif

struct gengetopt_args_info
{
  const char *help_help; /* Print help and exit help description.  */
  const char *version_help; /* Print version and exit help description.  */
  char * filename_arg;	/* do-file for analysis (do-файл для анализа).  */
  char * filename_orig;	/* do-file for analysis (do-файл для анализа) original value given at command line.  */
  const char *filename_help; /* do-file for analysis (do-файл для анализа) help description.  */
  long copies_arg;	/* Number of copies of the product (Количество копий изделия).  */
  char * copies_orig;	/* Number of copies of the product (Количество копий изделия) original value given at command line.  */
  const char *copies_help; /* Number of copies of the product (Количество копий изделия) help description.  */
  char * per_style_arg;	/* List of elements (Стиль переченя элементов). Style :
  sch  - list of elements for the electrical circuit
    (перечень элементов для электрической схемы);
  doc  - for inclusion in instruction additions (для
    включения в дополнения инструкций). (default='sch').  */
  char * per_style_orig;	/* List of elements (Стиль переченя элементов). Style :
  sch  - list of elements for the electrical circuit
    (перечень элементов для электрической схемы);
  doc  - for inclusion in instruction additions (для
    включения в дополнения инструкций). original value given at command line.  */
  const char *per_style_help; /* List of elements (Стиль переченя элементов). Style :
  sch  - list of elements for the electrical circuit
    (перечень элементов для электрической схемы);
  doc  - for inclusion in instruction additions (для
    включения в дополнения инструкций). help description.  */
  char * out_folder_arg;	/* Folder for outputs. Default do-file_Dir/../out/ (Директория для выходных файлов. По умолчанию do-file_Dir/../out/).  */
  char * out_folder_orig;	/* Folder for outputs. Default do-file_Dir/../out/ (Директория для выходных файлов. По умолчанию do-file_Dir/../out/) original value given at command line.  */
  const char *out_folder_help; /* Folder for outputs. Default do-file_Dir/../out/ (Директория для выходных файлов. По умолчанию do-file_Dir/../out/) help description.  */
  char * res_folder_arg;	/* Path to resource files. Default VP_auto_Dir/res/ (Путь к файлам ресурсов. По умолчанию VP_auto_Dir/res/).  */
  char * res_folder_orig;	/* Path to resource files. Default VP_auto_Dir/res/ (Путь к файлам ресурсов. По умолчанию VP_auto_Dir/res/) original value given at command line.  */
  const char *res_folder_help; /* Path to resource files. Default VP_auto_Dir/res/ (Путь к файлам ресурсов. По умолчанию VP_auto_Dir/res/) help description.  */
  
  int help_given ;	/* Whether help was given.  */
  int version_given ;	/* Whether version was given.  */
  int filename_given ;	/* Whether filename was given.  */
  int copies_given ;	/* Whether copies was given.  */
  int per_style_given ;	/* Whether per_style was given.  */
  int out_folder_given ;	/* Whether out_folder was given.  */
  int res_folder_given ;	/* Whether res_folder was given.  */

  char **inputs ; /* unamed options */
  unsigned inputs_num ; /* unamed options number */
} ;

extern const char *gengetopt_args_info_purpose;
extern const char *gengetopt_args_info_usage;
extern const char *gengetopt_args_info_help[];

int cmdline_parser (int argc, char * const *argv,
  struct gengetopt_args_info *args_info);
int cmdline_parser2 (int argc, char * const *argv,
  struct gengetopt_args_info *args_info,
  int override, int initialize, int check_required);
int cmdline_parser_file_save(const char *filename,
  struct gengetopt_args_info *args_info);

void cmdline_parser_print_help(void);
void cmdline_parser_print_version(void);

void cmdline_parser_init (struct gengetopt_args_info *args_info);
void cmdline_parser_free (struct gengetopt_args_info *args_info);

int cmdline_parser_required (struct gengetopt_args_info *args_info,
  const char *prog_name);

extern char *cmdline_parser_per_style_values[] ;	/* Possible values for per_style.  */


#ifdef __cplusplus
}
#endif /* __cplusplus */
#endif /* CMDLINE_H */
